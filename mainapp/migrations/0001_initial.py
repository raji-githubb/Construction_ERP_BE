# Generated by Django 5.0 on 2024-10-14 12:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('account_type', models.CharField(max_length=20)),
                ('balance', models.DecimalField(decimal_places=2, default='0.0,', max_digits=15)),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('purchase_date', models.DateField()),
                ('purchase_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('depreciation_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('assigned_to', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Retired', 'Retired')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AssetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ChangeOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestor', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('change_reason', models.TextField()),
                ('impact_on_scope', models.TextField()),
                ('cost_impact', models.DecimalField(decimal_places=2, max_digits=12)),
                ('time_impact', models.IntegerField()),
                ('status', models.CharField(max_length=50)),
                ('submitted_date', models.DateField()),
                ('approved_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('contact_person', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='ClientInteractionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope_of_work', models.TextField()),
                ('pricing', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_terms', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('signed_by_client', models.BooleanField(default=False)),
                ('signed_by_contractor', models.BooleanField(default=False)),
                ('approved_by', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('symbol', models.CharField(max_length=5)),
                ('exchange_rate', models.DecimalField(decimal_places=4, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('serial_number', models.CharField(max_length=255, unique=True)),
                ('purchase_date', models.DateField()),
                ('condition', models.CharField(choices=[('New', 'New'), ('Used', 'Used')], max_length=255)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('In Use', 'In use'), ('Under Maintenance', 'Under maintenance')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('stock_quantity', models.IntegerField(default='0.0,')),
                ('reorder_point', models.IntegerField(default='10.0,')),
                ('safety_stock', models.IntegerField(default='5.0,')),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('barcode', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('company', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('project_description', models.TextField()),
                ('status', models.CharField(choices=[('new', 'New'), ('qualified', 'Qualified'), ('disqualified', 'Disqualified')], max_length=50)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('urgency', models.IntegerField()),
                ('decision_maker', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeadSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MitigationStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(default='Pending,', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ModuleRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MSRegistration',
            fields=[
                ('mservice_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('mservice_name', models.CharField(max_length=100)),
                ('arguments', models.JSONField(blank=True, null=True)),
                ('arguments_list', models.TextField(blank=True, null=True)),
                ('required_parameter', models.TextField(blank=True, null=True)),
                ('optional_parameter', models.TextField(blank=True, null=True)),
                ('is_authenticate', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('is_read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='RiskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RiskOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='SalesRepresentative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SalesStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Subcontractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('certification', models.CharField(max_length=255)),
                ('experience_years', models.IntegerField()),
                ('financial_stability_rating', models.IntegerField()),
                ('references', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=100)),
                ('date_prequalified', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=255)),
                ('capacity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_no', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_date', models.DateTimeField(default='now,')),
                ('condition', models.CharField(max_length=255)),
                ('comments', models.TextField()),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_asset', to='mainapp.asset')),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_category', to='mainapp.assetcategory'),
        ),
        migrations.CreateModel(
            name='AssetMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_date', models.DateTimeField(default='now,')),
                ('maintenance_type', models.CharField(max_length=255)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField()),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_asset', to='mainapp.asset')),
            ],
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_type', models.CharField(choices=[('Safety', 'Safety'), ('Quality', 'Quality')], max_length=50)),
                ('date', models.DateField()),
                ('findings', models.TextField()),
                ('conducted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_conducted_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BidProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfp_rfq_title', models.CharField(max_length=255)),
                ('technical_proposal', models.TextField()),
                ('financial_proposal', models.TextField()),
                ('internal_collaboration', models.TextField()),
                ('submission_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='draft,', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BidProposalcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BidProposalupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BidQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfp_rfq_title', models.CharField(max_length=255)),
                ('response_due_date', models.DateField()),
                ('alignment_with_strategy', models.TextField()),
                ('capacity_evaluation', models.TextField()),
                ('is_qualified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BidQualificationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BidQualificationupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BidSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateField()),
                ('submission_method', models.CharField(choices=[('portal', 'Portal'), ('email', 'Email'), ('physical', 'Physical')], max_length=50)),
                ('documents_included', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bid_proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_bid_proposal', to='mainapp.bidproposal')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BidSubmissioncreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BidSubmissionupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChangeOrderApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved_by', models.CharField(max_length=255)),
                ('approval_date', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('change_order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_change_order', to='mainapp.changeorder')),
            ],
        ),
        migrations.CreateModel(
            name='ChangeOrderImplementation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('implementation_details', models.TextField()),
                ('implementation_date', models.DateField()),
                ('new_deadline', models.DateField(blank=True, null=True)),
                ('change_order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_change_order', to='mainapp.changeorder')),
            ],
        ),
        migrations.AddField(
            model_name='changeorder',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contract', to='mainapp.contract'),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('action_by', models.CharField(max_length=255)),
                ('action_date', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('change_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_change_order', to='mainapp.changeorder')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contract', to='mainapp.contract')),
            ],
        ),
        migrations.CreateModel(
            name='ContractCloseout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('closeout_date', models.DateField()),
                ('final_review_notes', models.TextField()),
                ('signed_off_by', models.CharField(max_length=255)),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contract', to='mainapp.contract')),
            ],
        ),
        migrations.CreateModel(
            name='ContractExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_date', models.DateField()),
                ('status', models.CharField(choices=[('in_progress', 'In_progress'), ('completed', 'Completed'), ('terminated', 'Terminated')], default='in_progress,', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contract', to='mainapp.contract')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ContractExecutioncreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ContractExecutionupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContractMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('due_date', models.DateField()),
                ('completed', models.BooleanField(default=False)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contract', to='mainapp.contract')),
            ],
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Contractorcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Contractorupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='contractor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contractor', to='mainapp.contractor'),
        ),
        migrations.CreateModel(
            name='CorrectivePreventiveAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date_taken', models.DateField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], max_length=50)),
                ('audit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_audit', to='mainapp.audit')),
            ],
        ),
        migrations.CreateModel(
            name='CriticalPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_duration', models.PositiveIntegerField()),
                ('is_on_critical_path', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CriticalPathcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CriticalPathupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CriticalPathMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('delay_days', models.PositiveIntegerField(default='0.0,')),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CriticalPathMonitoringcreated_by', to=settings.AUTH_USER_MODEL)),
                ('critical_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_critical_path', to='mainapp.criticalpath')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CriticalPathMonitoringupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DelayCause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cause', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DelayCausecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DelayCauseupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Depreciation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('depreciation_date', models.DateTimeField(default='now,')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_asset', to='mainapp.asset')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=255)),
                ('upload_date', models.DateField()),
                ('change_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_change_order', to='mainapp.changeorder')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contract', to='mainapp.contract')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_to', models.CharField(max_length=255)),
                ('assigned_date', models.DateTimeField(default='now,')),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_equipment', to='mainapp.equipment')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_date', models.DateTimeField(default='now,')),
                ('condition', models.CharField(max_length=255)),
                ('comments', models.TextField(blank=True, null=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_equipment', to='mainapp.equipment')),
            ],
        ),
        migrations.AddField(
            model_name='equipment',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_category', to='mainapp.equipmentcategory'),
        ),
        migrations.CreateModel(
            name='EquipmentMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_date', models.DateTimeField(default='now,')),
                ('maintenance_type', models.CharField(choices=[('Preventive', 'Preventive'), ('Corrective', 'Corrective')], max_length=255)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField()),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_equipment', to='mainapp.equipment')),
            ],
        ),
        migrations.CreateModel(
            name='FinalVendorSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selection_date', models.DateField()),
                ('justification', models.TextField()),
                ('approved_by', models.CharField(help_text='Name of the person or committee who approved the selection,', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FinalVendorSelectioncreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FinalVendorSelectionupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContractAward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award_date', models.DateField()),
                ('notification_sent_to_vendor', models.BooleanField(default=False)),
                ('notification_sent_to_bidders', models.BooleanField(default=False)),
                ('feedback_to_bidders', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contract', to='mainapp.contract')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ContractAwardcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ContractAwardupdated_by', to=settings.AUTH_USER_MODEL)),
                ('selected_vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_selected_vendor', to='mainapp.finalvendorselection')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(choices=[('Safety', 'Safety'), ('Quality', 'Quality')], max_length=50)),
                ('description', models.TextField()),
                ('date_reported', models.DateTimeField()),
                ('immediate_action', models.TextField(blank=True, null=True)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_reported_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CorrectiveAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date_taken', models.DateField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], max_length=50)),
                ('action_taken_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_action_taken_by', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_incident', to='mainapp.incidentreport')),
            ],
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('skills', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Individualcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Individualupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InternalDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='InternalDepartmentcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='InternalDepartmentupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Investigation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('findings', models.TextField()),
                ('root_cause', models.TextField()),
                ('investigation_date', models.DateField()),
                ('incident', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_incident', to='mainapp.incidentreport')),
                ('investigator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_investigator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=255)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('invoice_date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Paid', 'Paid'), ('Rejected', 'Rejected')], default='Pending,', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Invoicecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Invoiceupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_date', models.DateTimeField(default='now,')),
                ('physical_count', models.IntegerField()),
                ('system_count', models.IntegerField()),
                ('discrepancy', models.IntegerField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_item', to='mainapp.item')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_category', to='mainapp.itemcategory'),
        ),
        migrations.CreateModel(
            name='ClientInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date', models.DateTimeField()),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('interaction_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_interaction_type', to='mainapp.clientinteractiontype')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lead', to='mainapp.lead')),
            ],
        ),
        migrations.AddField(
            model_name='lead',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_source', to='mainapp.leadsource'),
        ),
        migrations.CreateModel(
            name='LegalReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField()),
                ('reviewed_by', models.CharField(help_text='Name of the legal reviewer,', max_length=100)),
                ('approval_status', models.CharField(choices=[('approved', 'Approved'), ('revised', 'Revised'), ('not_approved', 'Not_approved')], default='approved,', max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contract', to='mainapp.contract')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='LegalReviewcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='LegalReviewupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('target_date', models.DateField()),
                ('client_review_required', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Milestonecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Milestoneupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClientReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_feedback', models.TextField(blank=True, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ClientReviewcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ClientReviewupdated_by', to=settings.AUTH_USER_MODEL)),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_milestone', to='mainapp.milestone')),
            ],
        ),
        migrations.CreateModel(
            name='MitigationAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_name', models.CharField(max_length=255)),
                ('action_description', models.TextField()),
                ('due_date', models.DateField()),
                ('completed', models.BooleanField(default=False)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('mitigation_strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_mitigation_strategy', to='mainapp.mitigationstrategy')),
            ],
        ),
        migrations.CreateModel(
            name='MsToModuleMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_id', to='mainapp.moduleregistration')),
                ('mservice_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ms_id', to='mainapp.msregistration')),
            ],
        ),
        migrations.CreateModel(
            name='NegotiationAndAward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('negotiation_date', models.DateField()),
                ('negotiation_notes', models.TextField(blank=True, null=True)),
                ('final_terms', models.TextField(blank=True, null=True)),
                ('awarded', models.BooleanField(default=False)),
                ('internal_preparation_started', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bid_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_bid_submission', to='mainapp.bidsubmission')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NegotiationAndAwardcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NegotiationAndAwardupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('probability', models.IntegerField()),
                ('expected_close_date', models.DateField()),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lead', to='mainapp.lead')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_assigned_to', to='mainapp.salesrepresentative')),
                ('stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_stage', to='mainapp.salesstage')),
            ],
        ),
        migrations.CreateModel(
            name='OpportunityIdentification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tender_title', models.CharField(max_length=255)),
                ('tender_type', models.CharField(max_length=50)),
                ('identification_date', models.DateField()),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('relevant_to_company', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='OpportunityIdentificationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='OpportunityIdentificationupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BidNoBidDecision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision_date', models.DateField()),
                ('is_bid', models.BooleanField(default=False)),
                ('rationale', models.TextField(blank=True, null=True)),
                ('profitability_assessment', models.TextField(blank=True, null=True)),
                ('resource_capacity_assessment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BidNoBidDecisioncreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BidNoBidDecisionupdated_by', to=settings.AUTH_USER_MODEL)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_opportunity', to='mainapp.opportunityidentification')),
            ],
        ),
        migrations.CreateModel(
            name='PostSubmissionFollowUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follow_up_date', models.DateField()),
                ('communication_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('meeting', 'Meeting')], max_length=50)),
                ('client_response', models.TextField(blank=True, null=True)),
                ('clarification_requested', models.BooleanField(default=False)),
                ('additional_info_provided', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bid_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_bid_submission', to='mainapp.bidsubmission')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PostSubmissionFollowUpcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PostSubmissionFollowUpupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProcurementNeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('quantity', models.PositiveIntegerField()),
                ('date_needed', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProcurementNeedcreated_by', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_department', to='mainapp.internaldepartment')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProcurementNeedupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentedRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requirement_description', models.TextField()),
                ('quantity', models.PositiveIntegerField()),
                ('timeline', models.DateField()),
                ('budget_estimate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('technical_specifications', models.TextField(blank=True, null=True)),
                ('quality_specifications', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DocumentedRequirementcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DocumentedRequirementupdated_by', to=settings.AUTH_USER_MODEL)),
                ('procurement_need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_procurement_need', to='mainapp.procurementneed')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('projected_end_date', models.DateField(blank=True, null=True)),
                ('progress', models.IntegerField(default='0.0,')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('location', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Projectcreated_by', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_manager', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Projectupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostProjectReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField()),
                ('evaluation_summary', models.TextField()),
                ('strengths', models.TextField(blank=True, null=True)),
                ('areas_for_improvement', models.TextField(blank=True, null=True)),
                ('lessons_learned', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PostProjectReviewcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PostProjectReviewupdated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_period_start', models.DateField()),
                ('pay_period_end', models.DateField()),
                ('total_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Payrollcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Payrollupdated_by', to=settings.AUTH_USER_MODEL)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_worker', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField()),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('Bank Transfer', 'Bank transfer'), ('Credit Card', 'Credit card'), ('Cash', 'Cash'), ('Check', 'Check')], max_length=50)),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('milestone', models.CharField(max_length=255)),
                ('payment_due', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Paymentcreated_by', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_invoice', to='mainapp.invoice')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Paymentupdated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='MilestoneBilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('due_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('invoiced', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.AddField(
            model_name='milestone',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='LegalRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('requirement_type', models.CharField(max_length=255)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_type', models.CharField(choices=[('Safety', 'Safety'), ('Quality', 'Quality')], max_length=50)),
                ('date', models.DateField()),
                ('checklist', models.TextField()),
                ('findings', models.TextField()),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_inspector', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.AddField(
            model_name='incidentreport',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project'),
        ),
        migrations.CreateModel(
            name='FinancialTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_account', to='mainapp.account')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='FinalReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(choices=[('Safety', 'Safety'), ('Quality', 'Quality')], max_length=50)),
                ('review_details', models.TextField()),
                ('date', models.DateField()),
                ('conducted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_conducted_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='FinalInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_date', models.DateField()),
                ('client_present', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True, null=True)),
                ('all_punch_items_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FinalInspectioncreated_by', to=settings.AUTH_USER_MODEL)),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_inspector', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FinalInspectionupdated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='FinalClientSignOff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign_off_date', models.DateField()),
                ('is_approved', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_client', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FinalClientSignOffcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FinalClientSignOffupdated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.AddField(
            model_name='criticalpath',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project'),
        ),
        migrations.CreateModel(
            name='CostEstimation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('actual_cost', models.DecimalField(decimal_places=2, default='0.0,', max_digits=15)),
                ('forecast_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_category', to='mainapp.costcategory')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='ContractAwardExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_title', models.CharField(max_length=255)),
                ('execution_status', models.CharField(max_length=100)),
                ('delivery_commitments', models.TextField()),
                ('execution_notes', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ContractAwardExecutioncreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ContractAwardExecutionupdated_by', to=settings.AUTH_USER_MODEL)),
                ('project_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project_manager', to='mainapp.project')),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project'),
        ),
        migrations.CreateModel(
            name='ComplianceMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compliance_type', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('Compliant', 'Compliant'), ('Non-compliant', 'Non-compliant')], max_length=50)),
                ('date', models.DateField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='CloseoutDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='ClientSatisfactionSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_date', models.DateField()),
                ('client_feedback', models.TextField()),
                ('score', models.IntegerField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='ClientFollowUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follow_up_date', models.DateField()),
                ('message', models.TextField()),
                ('action_taken', models.CharField(choices=[('email_sent', 'Email_sent'), ('called', 'Called')], max_length=255)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='ClientFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_date', models.DateField()),
                ('client_name', models.CharField(max_length=255)),
                ('satisfaction_rating', models.IntegerField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ClientFeedbackcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ClientFeedbackupdated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('materials_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('labor_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('equipment_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('contingency_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BudgetAllocationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BudgetAllocationupdated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_budget', models.DecimalField(decimal_places=2, max_digits=15)),
                ('allocated_budget', models.DecimalField(decimal_places=2, max_digits=15)),
                ('remaining_budget', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_currency', to='mainapp.currency')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.AddField(
            model_name='audit',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project'),
        ),
        migrations.CreateModel(
            name='ProjectCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_date', models.DateTimeField()),
                ('message', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDocumentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=100)),
                ('issue_date', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectDocumentationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectDocumentationupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFinancialCloseout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('closeout_date', models.DateField()),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_revenue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subcontractors_paid', models.BooleanField(default=False)),
                ('purchase_orders_closed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFinancialCloseoutcreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFinancialCloseoutupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPerformanceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField()),
                ('original_budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('actual_budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('resource_utilization_percentage', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectPerformanceReviewcreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectPerformanceReviewupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectSchedulecreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectScheduleupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('viewed', 'Viewed'), ('negotiation', 'Negotiation'), ('approved', 'Approved')], max_length=50)),
                ('negotiation_notes', models.TextField(blank=True, null=True)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_opportunity', to='mainapp.opportunity')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.DecimalField(decimal_places=2, max_digits=6)),
                ('shortlisted', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProposalEvaluationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProposalEvaluationupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalPreparation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposal_title', models.CharField(max_length=255)),
                ('technical_solutions', models.TextField()),
                ('pricing', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timelines', models.TextField()),
                ('value_propositions', models.TextField()),
                ('compliance_check', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProposalPreparationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_opportunity', to='mainapp.opportunityidentification')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProposalPreparationupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PunchListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In progress'), ('Completed', 'Completed')], default='Pending,', max_length=50)),
                ('resolved_at', models.DateField(blank=True, null=True)),
                ('fix_deadline', models.DateField()),
                ('inspected', models.BooleanField(default=False)),
                ('quality_meets_standards', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contractor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contractor', to='mainapp.contractor')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PunchListItemcreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PunchListItemupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('order_date', models.DateTimeField()),
                ('product_service_description', models.TextField()),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Pending,', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contract', to='mainapp.contract')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PurchaseOrdercreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PurchaseOrderupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='purchase_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_purchase_order', to='mainapp.purchaseorder'),
        ),
        migrations.CreateModel(
            name='QualityControlPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='QualityControlPlancreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='QualityInspector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=255)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Requisition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('requested_by', models.CharField(max_length=255)),
                ('date_requested', models.DateTimeField(default='now,')),
                ('date_fulfilled', models.DateTimeField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_item', to='mainapp.item')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Resourcecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Resourceupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.CharField(max_length=100)),
                ('allocated_quantity', models.IntegerField()),
                ('allocated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allocated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_allocated_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceAllocationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceAllocationupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_from', models.DateField()),
                ('available_until', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceAvailabilitycreated_by', to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_resource', to='mainapp.resource')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceAvailabilityupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourcePlanning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workforce_required', models.IntegerField()),
                ('project_duration', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourcePlanningcreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourcePlanningupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('quantity', models.IntegerField()),
                ('resource_planning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_resource_planning', to='mainapp.resourceplanning')),
            ],
        ),
        migrations.CreateModel(
            name='Machinery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('quantity', models.IntegerField()),
                ('resource_planning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_resource_planning', to='mainapp.resourceplanning')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceUtilizationAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_date', models.DateField()),
                ('total_labor_hours', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_materials_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_equipment_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('labor_utilization_percentage', models.FloatField()),
                ('materials_utilization_percentage', models.FloatField()),
                ('equipment_utilization_percentage', models.FloatField()),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceUtilizationAnalysiscreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceUtilizationAnalysisupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Revenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('date', models.DateField()),
                ('received_by', models.CharField(max_length=255)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_customer', to='mainapp.customer')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='RFPRFQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('document_type', models.CharField(choices=[('RFP', 'Rfp'), ('RFQ', 'Rfq')], default='RFP,', max_length=3)),
                ('description', models.TextField()),
                ('submission_deadline', models.DateField()),
                ('contact_email', models.EmailField(max_length=254)),
                ('procurement_manager', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RFPRFQcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RFPRFQupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClarificationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ClarificationDocumentcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ClarificationDocumentupdated_by', to=settings.AUTH_USER_MODEL)),
                ('rfp_rfq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_rfp_rfq', to='mainapp.rfprfq')),
            ],
        ),
        migrations.CreateModel(
            name='RFPRFQDistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_sent', models.DateTimeField()),
                ('response_submitted', models.BooleanField(default=False)),
                ('submission_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RFPRFQDistributioncreated_by', to=settings.AUTH_USER_MODEL)),
                ('rfp_rfq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_rfp_rfq', to='mainapp.rfprfq')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RFPRFQDistributionupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RFPRFQResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField()),
                ('submitted_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RFPRFQResponsecreated_by', to=settings.AUTH_USER_MODEL)),
                ('distribution', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_distribution', to='mainapp.rfprfqdistribution')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RFPRFQResponseupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('risk_type', models.CharField(max_length=50)),
                ('date_identified', models.DateField()),
                ('status', models.CharField(default='Open,', max_length=50)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('risk_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_risk_category', to='mainapp.riskcategory')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_owner', to='mainapp.riskowner')),
            ],
        ),
        migrations.AddField(
            model_name='mitigationstrategy',
            name='risk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_risk', to='mainapp.risk'),
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.IntegerField()),
                ('impact', models.IntegerField()),
                ('overall_risk_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('risk', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_risk', to='mainapp.risk')),
            ],
        ),
        migrations.AddField(
            model_name='mitigationstrategy',
            name='mitigation_owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_mitigation_owner', to='mainapp.riskowner'),
        ),
        migrations.CreateModel(
            name='RiskReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField()),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Mitigated', 'Mitigated'), ('Closed', 'Closed')], max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_reviewed_by', to='mainapp.riskowner')),
                ('risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_risk', to='mainapp.risk')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Rolecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Roleupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.role'),
        ),
        migrations.CreateModel(
            name='SafetyOfficer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=255)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SafetyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SafetyPlancreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.AddField(
            model_name='lead',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_assigned_to', to='mainapp.salesrepresentative'),
        ),
        migrations.CreateModel(
            name='ScheduleAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_date', models.DateField()),
                ('new_date', models.DateField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adjusted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_adjusted_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ScheduleAdjustmentcreated_by', to=settings.AUTH_USER_MODEL)),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_milestone', to='mainapp.milestone')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ScheduleAdjustmentupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScoringCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ScoringCriteriacreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ScoringCriteriaupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipment_number', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Shipmentcreated_by', to=settings.AUTH_USER_MODEL)),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_purchase_order', to='mainapp.purchaseorder')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Shipmentupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SiteInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_date', models.DateField()),
                ('observations', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SiteInspectioncreated_by', to=settings.AUTH_USER_MODEL)),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_inspector', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('punch_list_items', models.ManyToManyField(related_name='%(class)s_punch_list_items', to='mainapp.punchlistitem')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SiteInspectionupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Stakeholdercreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_role', to='mainapp.role')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Stakeholderupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DelayNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_date', models.DateField()),
                ('message', models.TextField()),
                ('updated_timeline', models.DateField()),
                ('plan_to_mitigate', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DelayNotificationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DelayNotificationupdated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('stakeholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_stakeholder', to='mainapp.stakeholder')),
            ],
        ),
        migrations.CreateModel(
            name='StakeholderEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StakeholderEvaluationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_evaluation', to='mainapp.proposalevaluation')),
                ('stakeholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_stakeholder', to='mainapp.stakeholder')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StakeholderEvaluationupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StakeholderInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StakeholderInputcreated_by', to=settings.AUTH_USER_MODEL)),
                ('procurement_need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_procurement_need', to='mainapp.procurementneed')),
                ('stakeholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_stakeholder', to='mainapp.stakeholder')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StakeholderInputupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_adjusted', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.CharField(max_length=255)),
                ('adjustment_date', models.DateField()),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_material', to='mainapp.material')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='StockEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('movement_type', models.CharField(choices=[('IN', 'In'), ('OUT', 'Out')], max_length=10)),
                ('date', models.DateTimeField(default='now,')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_item', to='mainapp.item')),
            ],
        ),
        migrations.CreateModel(
            name='StockReplenishmentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_requested', models.DecimalField(decimal_places=2, max_digits=10)),
                ('request_date', models.DateField()),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_material', to='mainapp.material')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCloseout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_inspection_date', models.DateField()),
                ('punch_list_items', models.TextField(blank=True, null=True)),
                ('punch_list_completed', models.BooleanField(default=False)),
                ('final_payment', models.DecimalField(decimal_places=2, max_digits=12)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('subcontractor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_subcontractor', to='mainapp.subcontractor')),
            ],
        ),
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_of_expertise', models.CharField(max_length=255)),
                ('certifications', models.CharField(blank=True, max_length=255, null=True)),
                ('performance_rating', models.DecimalField(decimal_places=2, default='0.0,', max_digits=5)),
                ('subcontractor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_subcontractor', to='mainapp.subcontractor')),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('bid_submission_date', models.DateField()),
                ('status', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('subcontractor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_subcontractor', to='mainapp.subcontractor')),
            ],
        ),
        migrations.CreateModel(
            name='SubcontractorContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signed_date', models.DateField()),
                ('payment_terms', models.TextField()),
                ('insurance_requirements', models.TextField(blank=True, null=True)),
                ('change_order_provision', models.TextField(blank=True, null=True)),
                ('termination_conditions', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('subcontractor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_subcontractor', to='mainapp.subcontractor')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionFollowUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateField()),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_notes', models.TextField()),
                ('negotiation_engaged', models.BooleanField(default=False)),
                ('revisions_required', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SubmissionFollowUpcreated_by', to=settings.AUTH_USER_MODEL)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_proposal', to='mainapp.proposalpreparation')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SubmissionFollowUpupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_supplier', to='mainapp.supplier'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_individuals', models.ManyToManyField(related_name='%(class)s_assigned_individuals', to='mainapp.individual')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Taskcreated_by', to=settings.AUTH_USER_MODEL)),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_milestone', to='mainapp.milestone')),
                ('task_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task_owner', to='mainapp.individual')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Taskupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceReallocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reallocated_quantity', models.IntegerField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('reallocated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceReallocationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('original_allocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_original_allocation', to='mainapp.resourceallocation')),
                ('reallocated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_reallocated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceReallocationupdated_by', to=settings.AUTH_USER_MODEL)),
                ('new_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_new_task', to='mainapp.task')),
            ],
        ),
        migrations.AddField(
            model_name='resourceallocation',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task'),
        ),
        migrations.CreateModel(
            name='ResourceAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_date', models.DateField()),
                ('new_schedule', models.DateField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceAdjustmentcreated_by', to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_resource', to='mainapp.resource')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceAdjustmentupdated_by', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('planned_start_date', models.DateField(blank=True, null=True)),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('planned_end_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default='0.0,', max_digits=5)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectUpdatecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProjectUpdateupdated_by', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoDocumentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('geo_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField()),
                ('tasks_completed', models.IntegerField(default='0,')),
                ('issues_encountered', models.TextField(blank=True, null=True)),
                ('safety_compliance', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('subcontractor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_subcontractor', to='mainapp.subcontractor')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
            ],
        ),
        migrations.CreateModel(
            name='Delay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_at', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Delaycreated_by', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_reported_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Delayupdated_by', to=settings.AUTH_USER_MODEL)),
                ('cause', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_cause', to='mainapp.delaycause')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
            ],
        ),
        migrations.CreateModel(
            name='DailyProgressReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField()),
                ('description', models.TextField()),
                ('worker_count', models.IntegerField()),
                ('machinery_in_use', models.CharField(max_length=255)),
                ('materials_used', models.TextField()),
                ('completion_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('progress_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('issues_encountered', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_reported_by', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
            ],
        ),
        migrations.AddField(
            model_name='criticalpath',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task'),
        ),
        migrations.CreateModel(
            name='Adjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_start_date', models.DateField()),
                ('new_end_date', models.DateField()),
                ('adjustment_reason', models.TextField(blank=True, null=True)),
                ('adjusted_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adjusted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_adjusted_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Adjustmentcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Adjustmentupdated_by', to=settings.AUTH_USER_MODEL)),
                ('delay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_delay', to='mainapp.delay')),
                ('adjusted_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_adjusted_task', to='mainapp.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=30, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskCategorycreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskCategoryupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_category', to='mainapp.taskcategory'),
        ),
        migrations.CreateModel(
            name='TaskDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskDependencycreated_by', to=settings.AUTH_USER_MODEL)),
                ('dependent_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_dependent_task', to='mainapp.task')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskDependencyupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskDurationEstimation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_duration', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskDurationEstimationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskDurationEstimationupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='duration_estimation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_duration_estimation', to='mainapp.taskdurationestimation'),
        ),
        migrations.CreateModel(
            name='TaskPriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority_level', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskPrioritycreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskPriorityupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='priority',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_priority', to='mainapp.taskpriority'),
        ),
        migrations.CreateModel(
            name='TaskResourceAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default='1.0,')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskResourceAllocationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_resource', to='mainapp.resource')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskResourceAllocationupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('quantity_used', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceUsagecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResourceUsageupdated_by', to=settings.AUTH_USER_MODEL)),
                ('task_resource_allocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task_resource_allocation', to='mainapp.taskresourceallocation')),
            ],
        ),
        migrations.CreateModel(
            name='TaskSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_start_date', models.DateField()),
                ('scheduled_end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskSchedulecreated_by', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskScheduleupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not_started'), ('in_progress', 'In_progress'), ('completed', 'Completed'), ('on_hold', 'On_hold')], default='not_started,', max_length=20)),
                ('update_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskStatuscreated_by', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskStatusupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Teamcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Teamupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_assigned_team', to='mainapp.team'),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_role', to='mainapp.role')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('status', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_assigned_to', to='mainapp.teammember')),
            ],
        ),
        migrations.CreateModel(
            name='TenderDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tender_type', models.CharField(choices=[('RFP', 'Rfp'), ('RFQ', 'Rfq')], default='RFP,', max_length=3)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('issue_date', models.DateField()),
                ('closing_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TenderDocumentcreated_by', to=settings.AUTH_USER_MODEL)),
                ('prepared_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_prepared_by', to='mainapp.stakeholder')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TenderDocumentupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TenderProposalManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfp_rfq_title', models.CharField(max_length=255)),
                ('issued_date', models.DateField()),
                ('response_deadline', models.DateField()),
                ('response_tracking', models.TextField()),
                ('issued_by', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TenderProposalManagementcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TenderProposalManagementupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TenderScope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope_description', models.TextField()),
                ('technical_specifications', models.TextField()),
                ('delivery_timeline', models.DateField()),
                ('quality_standards', models.TextField()),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_tender', to='mainapp.tenderdocument')),
            ],
        ),
        migrations.CreateModel(
            name='TenderSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=255)),
                ('proposal_details', models.TextField()),
                ('submitted_on', models.DateField()),
                ('cost_estimate', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TenderSubmissioncreated_by', to=settings.AUTH_USER_MODEL)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_tender', to='mainapp.tenderdocument')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TenderSubmissionupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('hours_worked', models.DecimalField(decimal_places=2, max_digits=5)),
                ('submitted', models.BooleanField(default=False)),
                ('reviewed', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Timesheetcreated_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Timesheetupdated_by', to=settings.AUTH_USER_MODEL)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_worker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TimeTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('hours_spent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TimeTrackingcreated_by', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task', to='mainapp.task')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TimeTrackingupdated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('financial_standing', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('experience_years', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Vendorcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Vendorupdated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupplierPerformanceEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=255)),
                ('evaluation_date', models.DateField()),
                ('delivery_timeliness', models.IntegerField()),
                ('quality_of_products_services', models.IntegerField()),
                ('overall_execution', models.IntegerField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('average_score', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SupplierPerformanceEvaluationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SupplierPerformanceEvaluationupdated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor', to='mainapp.vendor')),
            ],
        ),
        migrations.AddField(
            model_name='rfprfqdistribution',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor', to='mainapp.vendor'),
        ),
        migrations.CreateModel(
            name='PrequalificationQuestionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_experience', models.TextField()),
                ('financial_status', models.TextField()),
                ('certifications', models.TextField()),
                ('safety_records', models.TextField()),
                ('other_qualifications', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PrequalificationQuestionnairecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PrequalificationQuestionnaireupdated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor', to='mainapp.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('date', models.DateField()),
                ('approved_by', models.CharField(max_length=255)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_account', to='mainapp.account')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_project', to='mainapp.project')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor', to='mainapp.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='VendorClarification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('submitted_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='VendorClarificationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('rfp_rfq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_rfp_rfq', to='mainapp.rfprfq')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='VendorClarificationupdated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor', to='mainapp.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='ClarificationResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('responded_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ClarificationResponsecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ClarificationResponseupdated_by', to=settings.AUTH_USER_MODEL)),
                ('clarification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_clarification', to='mainapp.vendorclarification')),
            ],
        ),
        migrations.CreateModel(
            name='VendorPrequalificationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prequalified', models.BooleanField(default=False)),
                ('prequalification_date', models.DateField(blank=True, null=True)),
                ('reasons_for_rejection', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='VendorPrequalificationStatuscreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='VendorPrequalificationStatusupdated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor', to='mainapp.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='VendorProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField()),
                ('is_compliant', models.BooleanField(default=False)),
                ('compliance_remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='VendorProposalcreated_by', to=settings.AUTH_USER_MODEL)),
                ('rfp_rfq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_rfp_rfq', to='mainapp.rfprfq')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='VendorProposalupdated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor', to='mainapp.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meets_technical_specs', models.BooleanField(default=False)),
                ('quality_assessment', models.TextField(blank=True, null=True)),
                ('additional_technical_remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TechnicalEvaluationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TechnicalEvaluationupdated_by', to=settings.AUTH_USER_MODEL)),
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_proposal', to='mainapp.vendorproposal')),
            ],
        ),
        migrations.CreateModel(
            name='RiskEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_reliability', models.CharField(blank=True, max_length=255, null=True)),
                ('financial_stability', models.CharField(blank=True, max_length=255, null=True)),
                ('logistical_issues', models.TextField(blank=True, null=True)),
                ('overall_risk_level', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], default='Low,', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RiskEvaluationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RiskEvaluationupdated_by', to=settings.AUTH_USER_MODEL)),
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_proposal', to='mainapp.vendorproposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalScoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProposalScoringcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProposalScoringupdated_by', to=settings.AUTH_USER_MODEL)),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_criteria', to='mainapp.scoringcriteria')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_proposal', to='mainapp.vendorproposal')),
            ],
        ),
        migrations.AddField(
            model_name='proposalevaluation',
            name='proposal',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_proposal', to='mainapp.vendorproposal'),
        ),
        migrations.CreateModel(
            name='ProposalCompliance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certification_compliance', models.BooleanField(default=False)),
                ('technical_spec_compliance', models.BooleanField(default=False)),
                ('other_compliance', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProposalCompliancecreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProposalComplianceupdated_by', to=settings.AUTH_USER_MODEL)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_proposal', to='mainapp.vendorproposal')),
            ],
        ),
        migrations.CreateModel(
            name='NegotiationTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('proposed_value', models.CharField(help_text="Vendor's initial proposal for the term,", max_length=255)),
                ('negotiated_value', models.CharField(help_text='Final agreed value after negotiations,', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NegotiationTermcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NegotiationTermupdated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor_proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor_proposal', to='mainapp.vendorproposal')),
            ],
        ),
        migrations.CreateModel(
            name='NegotiationSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField()),
                ('final_terms_agreed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NegotiationSummarycreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NegotiationSummaryupdated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor_proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor_proposal', to='mainapp.vendorproposal')),
            ],
        ),
        migrations.CreateModel(
            name='NegotiationStakeholder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NegotiationStakeholdercreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NegotiationStakeholderupdated_by', to=settings.AUTH_USER_MODEL)),
                ('stakeholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_stakeholder', to='mainapp.stakeholder')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_team', to='mainapp.team')),
                ('vendor_proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor_proposal', to='mainapp.vendorproposal')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quoted_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('hidden_costs', models.DecimalField(decimal_places=2, default='0.0,', max_digits=12)),
                ('delivery_schedule_assessment', models.TextField(blank=True, null=True)),
                ('warranties_offered', models.TextField(blank=True, null=True)),
                ('after_sales_service', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FinancialEvaluationcreated_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FinancialEvaluationupdated_by', to=settings.AUTH_USER_MODEL)),
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_proposal', to='mainapp.vendorproposal')),
            ],
        ),
        migrations.AddField(
            model_name='finalvendorselection',
            name='vendor_proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_vendor_proposal', to='mainapp.vendorproposal'),
        ),
        migrations.AddField(
            model_name='item',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_warehouse', to='mainapp.warehouse'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_location', to='mainapp.warehouse'),
        ),
        migrations.AddField(
            model_name='asset',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_location', to='mainapp.warehouse'),
        ),
    ]
